use super::task_filter::TaskFilter;
use super::priority::Priority;

/// Represents events that occur in the user interface.
///
/// These events are generated by the UI based on user input and
/// are handled by the controller layer.
#[derive(Debug, Clone, PartialEq)]
pub enum UiEvent {
    /// User wants to add a new task with the given description
    AddTask(String),
    
    /// User wants to list tasks with an optional filter
    ListTasks(Option<TaskFilter>),
    
    /// User wants to remove a task by ID
    RemoveTask(usize),
    
    /// User wants to mark a task as completed
    CompleteTask(usize),
    
    /// User wants to mark a task as pending (incomplete)
    UncompleteTask(usize),
    
    /// User wants to toggle a task's completion status
    ToggleTask(usize),
    
    /// User wants to set the priority of a task
    SetPriority(usize, Priority),
    
    /// User wants to see help information
    ShowHelp,
    
    /// User wants to quit the application
    Quit,
    
    /// Unknown command entered
    UnknownCommand(String),
    
    /// Invalid input (e.g., missing arguments)
    InvalidInput(String),
}
